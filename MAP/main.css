.textHeader {
  padding:4px;
  font-size:12px;
  background:silver;
  text-align:center;
}

.textFooter {
  position:fixed;
  bottom:0;
  padding:4px;
  font-size:12px;
  background:silver;
  text-align:center;
  width: 100%;
}

.buttRigth {
  float:rigth;
}

button.buttRigth {
    float:right;
}

.formInput {
  margin:2px 5px 2px 5px;
  border-radius:0px!important;
  -webkit-border-radius:0px!important;
  -moz-border-radius:0px!important;
}

.ulAdressList {
  padding: 0; /* Убираем поля */
  margin-left: 2px; /* Отступ слева */
}

.ellipseEnd {
}

.liAdressList {
  font-size: 14px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  list-style-type:decimal;
  list-style-position: inside; */
/*  margin-left: 0px; /* Отступ слева */
    -webkit-margin-before: 1em;
    -webkit-margin-after: 1em;
    -webkit-margin-start: 0px;
    -webkit-margin-end: 0px;
    -webkit-padding-start: 0px;

}

.cont-dragula {
  background-color: rgba(255, 255, 255, 0.2);
  width: 100%;
}
.cont-dragula:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.2);
}
/*
 * note that styling gu-mirror directly is a bad practice because it"s too generic.
 * you"re better off giving the draggable elements a unique class and styling that directly!
 */
.cont-dragula > div,
.gu-mirror {
  margin: 4px;
  padding: 10px;
  background-color: rgba(0, 0, 0, 0.2);
  transition: opacity 0.4s ease-in-out;
}
.cont-dragula > div {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.cont-dragula > li {
  margin: 4px;
  padding: 10px;
  background-color: rgba(0, 0, 0, 0.2);
  transition: opacity 0.4s ease-in-out;
}

.cont-dragula > li {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.gu-mirror {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}
.cont-dragula .ex-moved {
  background-color: #e74c3c;
}
.cont-dragula.ex-over {
  background-color: rgba(255, 255, 255, 0.3);
}
#left-lovehandles > div,
#right-lovehandles > div {
  cursor: initial;
}
.handle {
  padding: 0 5px;
  margin-right: 5px;
  background-color: rgba(0, 0, 0, 0.4);
  cursor: move;
}

.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
}
.gu-hide {
  display: none !important;
}
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}
.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}
.wrapper {
  background-color: #942A57;
}


.promo {
  margin-bottom: 0;
  font-style: italic;
  padding: 10px;
  background-color: #ff4020;
  border-bottom: 5px solid #c00;
}

a {
  font-weight: bold;
}
a,
a:hover {
  color: #ecf0f1;
}


.parent {
  background-color: rgba(255, 255, 255, 0.2);
  margin: 20px 0;
  padding: 10px;
}


.gh-fork {
  position: fixed;
  top: 0;
  right: 0;
  border: 0;
}

.parent > label {
    color: #fff;
}